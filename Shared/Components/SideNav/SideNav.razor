@using Syncfusion.Blazor.Navigations

<div id="wrapper">
    <div class="col-lg-12 col-sm-12 col-md-12">
        <!--header-section  declaration -->
        <div class="main-header" id="header-section">
            <ul class="header-list">
                <li class="float-left header-style icon-menu" id="hamburger" @onclick="@Toggle"></li>
                <li class="float-left header-style nav-pane"><b>Navigation Pane</b></li>
                <li class="header-style float-right support border-left"><b>Support</b></li>
            </ul>
        </div>
        <!-- end of header-section -->
        <!-- sidebar element declaration -->
        <SfSidebar HtmlAttributes="@HtmlAttribute" Width="290px" Target=".main-content" @ref="Sidebar" MediaQuery="(min-width:600px)">
            <ChildContent>
                <div class="main-menu">
                    <div class="table-content">
                        <input type="text" placeholder="Search..." class="search-icon">
                        <p class="main-menu-header">TABLE OF CONTENTS</p>
                    </div>
                    <div>
                        <SfTreeView CssClass="main-treeview" @ref="TreeView"  ExpandOn="@Expand" TValue="TreeData">
                            <TreeViewFieldsSettings Id="nodeId" Text="nodeText" IconCss="iconCss" DataSource="treedata" HasChildren="hasChild" ParentID="pid">
                            </TreeViewFieldsSettings>
                        </SfTreeView>
                    </div>
                </div>
            </ChildContent>
        </SfSidebar>
        <!-- end of sidebar element -->
        <!-- main-content declaration -->
        <div class="main-content" id="main-text">
            <div class="sidebar-content">
                <h2 class="sidebar-heading"> Responsive Sidebar With Treeview</h2>
                <p class="paragraph-content">
                    This is a graphical aid for visualising and categorising the site, in the style of an expandable and collapsable treeview component.
                    It auto-expands to display the node(s), if any, corresponding to the currently viewed title, highlighting that node(s)
                    and its ancestors. Load-on-demand when expanding nodes is available where supported (most graphical browsers),
                    falling back to a full-page reload. MediaWiki-supported caching, aside from squid, has been considered so that
                    unnecessary re-downloads of content are avoided where possible. The complete expanded/collapsed state of
                    the treeview persists across page views in most situations.
                </p>
                <div class="line"></div>
                <h2 class="sidebar-heading">Lorem Ipsum Dolor</h2>
                <p class="paragraph-content">
                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do
                    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis
                    nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure
                    dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
                </p>
                <div class="line"></div>
                <h2 class="sidebar-heading"> Lorem Ipsum Dolor</h2>
                <p class="paragraph-content">
                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                    tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
                    exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in
                    reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint
                    occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
                </p>
                <div class="line"></div>
                <h2 class="sidebar-heading"> Lorem Ipsum Dolor</h2>
                <p class="paragraph-content">
                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                    tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
                    exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in
                    reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint
                    occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
                </p>
                <div class="line"></div>
                <h2 class="sidebar-heading"> Lorem Ipsum Dolor</h2>
                <p class="paragraph-content">
                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                    tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
                    exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in
                    reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint
                    occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
                </p>
            </div>
        </div>
    </div>
</div>
@code {
    SfTreeView<TreeData> TreeView;
    SfSidebar Sidebar;
    public ExpandOnSettings Expand = ExpandOnSettings.Click;
    Dictionary<string, object> HtmlAttribute = new Dictionary<string, object>()
    {
        {"class", "sidebar-treeview" }
    };
    public void Toggle()
    {
        this.Sidebar.Toggle();
    }
    public class TreeData{
        public string nodeId { get; set; }
        public string nodeText { get; set; }
        public string iconCss { get; set; }
        public bool hasChild { get; set; }
        public string pid { get; set; }
    }
    private List<TreeData> treedata = new List<TreeData> ();
    protected override void OnInitialized() {
        base.OnInitialized();
        treedata.Add(new TreeData { nodeId = "01", nodeText = "Installation", iconCss = "icon-microchip icon" });
        treedata.Add(new TreeData { nodeId = "02", nodeText = "Deployment", iconCss = "icon-thumbs-up-alt icon" });
        treedata.Add(new TreeData { nodeId = "03", nodeText = "Quick Start", iconCss = "icon-docs icon" });
        treedata.Add(new TreeData { nodeId = "04", nodeText = "Components", iconCss = "icon-th icon", hasChild=true });
        treedata.Add(new TreeData { nodeId = "04-01", nodeText = "Calendar", iconCss = "icon-circle-thin icon", pid="04" });
        treedata.Add(new TreeData { nodeId = "04-02", nodeText = "DatePicker", iconCss = "icon-circle-thin icon", pid="04" });
        treedata.Add(new TreeData { nodeId = "04-03", nodeText = "DateTimePicker", iconCss = "icon-circle-thin icon", pid="04" });
        treedata.Add(new TreeData { nodeId = "04-04", nodeText = "DateRangePicker", iconCss = "icon-circle-thin icon", pid="04" });
        treedata.Add(new TreeData { nodeId = "04-05", nodeText = "TimePicker", iconCss = "icon-circle-thin icon", pid="04" });
        treedata.Add(new TreeData { nodeId = "04-06", nodeText = "SideBar", iconCss = "icon-circle-thin icon", pid="04" });
        treedata.Add(new TreeData { nodeId = "05", nodeText = "API Reference", iconCss = "icon-code icon", hasChild=true });
        treedata.Add(new TreeData { nodeId = "05-01", nodeText = "Calendar", iconCss = "icon-circle-thin icon", pid="05" });
        treedata.Add(new TreeData { nodeId = "05-02", nodeText = "DatePicker", iconCss = "icon-circle-thin icon", pid="05" });
        treedata.Add(new TreeData { nodeId = "05-03", nodeText = "DateTimePicker", iconCss = "icon-circle-thin icon", pid="05" });
        treedata.Add(new TreeData { nodeId = "05-04", nodeText = "DateRangePicker", iconCss = "icon-circle-thin icon", pid="05" });
        treedata.Add(new TreeData { nodeId = "05-05", nodeText = "TimePicker", iconCss = "icon-circle-thin icon", pid="05" });
        treedata.Add(new TreeData { nodeId = "05-06", nodeText = "SideBar", iconCss = "icon-circle-thin icon", pid="05" });
        treedata.Add(new TreeData { nodeId = "06", nodeText = "Browser Compatibility", iconCss = "icon-chrome icon" });
        treedata.Add(new TreeData { nodeId = "07", nodeText = "Upgrade Packages", iconCss = "icon-up-hand icon" });
        treedata.Add(new TreeData { nodeId = "08", nodeText = "Release Notes", iconCss = "icon-bookmark-empty icon" });
        treedata.Add(new TreeData { nodeId = "09", nodeText = "FAQ", iconCss = "icon-help-circled icon" });
        treedata.Add(new TreeData { nodeId = "10", nodeText = "License", iconCss = "icon-doc-text icon" });
    }
}
@* SideNav Styles *@
<SideNavStyles/>